version: '3.8'

services:
  app:
    image: cehhghost/crosswords_backend:latest
    # cehhghost/crosswords_backend:latest
    ports:
      - "8081:8081"  # Пробрасываем порт Spring Boot
    depends_on:
      - postgres
      - opensearch
    networks:
      - shared_network
    environment:
      OPENSEARCH_URIS: http://node-0.example.com:9200
      OPENSEARCH_USERNAME: ${OPENSEARCH_USERNAME}
      OPENSEARCH_PASSWORD: ${OPENSEARCH_PASSWORD}
      SPRING_DATASOURCE_URL: jdbc:postgresql://backend-postgres:5432/crossword_new
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${SPRING_JPA_HIBERNATE_DDL_AUTO}
      SPRING_JPA_PROPERTIES_HIBERNATE_SHOW_SQL: ${SPRING_JPA_PROPERTIES_HIBERNATE_SHOW_SQL}
      JWT_SECRET: ${JWT_SECRET}
  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: crossword_new
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      shared_network:
        aliases:
          - backend-postgres

  opensearch:
    image: opensearchproject/opensearch:2.11.0  # Используем OpenSearch вместо Elasticsearch
    environment:
      discovery.type: single-node
      plugins.security.disabled: "true"
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: ${OPENSEARCH_PASSWORD}
      OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m"
      DISABLE_INSTALL_DEMO_CONFIG: "false"
      plugins.security.ssl.http.enabled: "false"
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    networks:
      shared_network:
        aliases:
          - node-0.example.com

volumes:
  postgres-data:
  opensearch-data:

networks:
  shared_network:
    external: true
